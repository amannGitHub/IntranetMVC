@model Intranet.Models.VideoRequests

@{
    ViewBag.Title = "Video Request";
}

<h2>Video Request</h2>
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <div class="container-fluid">
        <div class="row">
            @Html.HiddenFor(model => model.VideoRequestID)
            @Html.HiddenFor(model => model.emp_id)

            <div class="col-md-6">
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.ProjectName) <span class="field-required">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ProjectName, new { htmlAttributes = new { @class = "title" } })
                        @Html.ValidationMessageFor(model => model.ProjectName, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.project_id) <span class="field-required">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownList("project_id", ViewData["project_id"] as List<SelectListItem>, "Please select...")
                        @Html.ValidationMessageFor(model => model.project_id, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.VideoTypeID) <span class="field-required">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownList("VideoTypeID", ViewData["VideoTypeID"] as List<SelectListItem>, "Please select...")
                        @Html.ValidationMessageFor(model => model.VideoTypeID, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.VideoFileTypeID) <span class="field-required">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.DropDownList("VideoFileTypeID", ViewData["VideoFileTypeID"] as List<SelectListItem>, "Please select...")
                        @Html.ValidationMessageFor(model => model.VideoFileTypeID, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.VideoDescription) <span class="field-required">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.VideoDescription, 8, 40,  new { })
                        @Html.ValidationMessageFor(model => model.VideoDescription, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DueDate) <span class="field-required">*</span>
                    </div>
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DueDate, new { id = "datetimepicker_start" })
                        @Html.ValidationMessageFor(model => model.DueDate, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.HostingLocation)
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.HostingLocation)
                        @Html.ValidationMessageFor(model => model.HostingLocation, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.PresentationLocation)
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PresentationLocation)
                        @Html.ValidationMessageFor(model => model.PresentationLocation, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.OtherFilesLocation)
                    </div>
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OtherFilesLocation)
                        @Html.ValidationMessageFor(model => model.OtherFilesLocation, null, new { @class = "text-danger" })
                    </div>
                </div>
                <br />&nbsp;
            </div>
        </div>
        <br />&nbsp;
        <div class="row">
            <div class="form-group">
                <div class="editor-label"></div>
                <div class="col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
            <br />&nbsp;
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label"></div>
                <div class="col-md-10">
                    @Html.ActionLink("Back to List", "Index")
                </div>
            </div>
            <br />&nbsp;
        </div>
    </div>
}

<script type="text/javascript">
            $(function () {
                $('#datetimepicker_start').datetimepicker({
                    daysOfWeekDisabled: [0, 6],
                    showClear: true,
                    showTodayButton: true,
                    stepping: 15
                });
                $("#datetimepicker_start").val('');
                $('#VideoDescription').val('Please add any additional information here such as document locations, destination folders and other relevant information. Someone from video production will contact you if more information is needed.')
                $('#VideoDescription').focus(function () {
                    $(this).val('');
                });
            });
</script>

@Styles.Render("~/Content/Site.css")