@model Intranet.Models.ITRequests

@{
    ViewBag.Title = "IT Request";
}

<h2>View IT Request </h2>
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <div class="row">
        @Html.HiddenFor(model => model.ITRequestID)
        @Html.HiddenFor(model => model.emp_id)

        <div class="col-md-4">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.ITRequestTypeID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("ITRequestTypeID", ViewData["division"] as List<SelectListItem>, "Select...", new { @disabled = "disabled" })
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequestDescription)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.RequestDescription)
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.ITRequestID)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.ITRequestID)
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.project_id)
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("project_id", ViewData["division"] as List<SelectListItem>, "Select...", new { @disabled = "disabled" })
                </div>
            </div>
            <br />&nbsp;
        </div>
        <div class="col-md-4">
            
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.ITRequestStatusID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("ITRequestStatusID", ViewData["division"] as List<SelectListItem>, "Select...", new { @disabled = "disabled" })
                </div>
            </div>

            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.StatusDate)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.StatusDate)
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.CreatedDate)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.CreatedDate)
                </div>
            </div>

            <br />&nbsp;
            
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.AssigneeID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("AssigneeID", ViewData["AssigneeID"] as List<SelectListItem>, "Please select...", new { @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.AssigneeID, null, new { @class = "text-danger" })
                </div>
            </div>
            <br />&nbsp;
        </div>

    </div>


    <div class="row">        
        <div class="form-group">
            <div class="editor-label"></div>
            <div class="col-md-10">
                @{
                    var Manage = Request.Url.Query.Contains("Manage=Yes");
                }
                @if (Manage == true)
                {

                    @Html.ActionLink("Back to List", "ManageIndex")
                }
                else
                {
                    @Html.ActionLink("Back to List", "Index")
                }
            </div>
        </div>
        <br />&nbsp;
    </div>

}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

