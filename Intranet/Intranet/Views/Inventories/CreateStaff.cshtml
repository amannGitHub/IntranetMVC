<script type="text/javascript">
    $(document).ready(function () {

        //Dropdownlist Selectedchange event
        $("#ManufacturerID").change(function () {
            $("#EquipmentModelID").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetEquipmentModels")', // we are calling json method
                dataType: 'json',
                data: { id: $("#ManufacturerID").val() },

                // here we are get value of selected droplist and pass in same value as input to json method GetEquipmentModels.
                success: function (myList) {

                    $.each(myList, function (i, themodel) {
                        $("#EquipmentModelID").append('<option value="' + themodel.Value + '">' +
                         themodel.Text + '</option>');
                    });
                },

                error: function (ex) {
                    alert('Failed to retrieve myList.' + ex);
                }
            });
            return false;
        })
    });

</script>

@model Intranet.Models.Inventories

@{
    ViewBag.Title = "Create Staff Gear";
}

<h2>Create Staff Gear</h2>
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <div class="row">

        <div class="col-md-6">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.emp_id) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("emp_id", ViewData["emp_id"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.emp_id, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.ManufacturerID) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("ManufacturerID", ViewData["ManufacturerID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.ManufacturerID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.EquipmentModelID) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("EquipmentModelID", ViewData["themodel"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.EquipmentModelID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.EquipmentTypeID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("EquipmentTypeID", ViewData["EquipmentTypeID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.EquipmentTypeID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.OperatingSystemID) 
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("OperatingSystemID", ViewData["OperatingSystemID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.OperatingSystemID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.CPUID) 
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("CPUID", ViewData["CPUID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.CPUID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.RAMID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("RAMID", ViewData["RAMID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.RAMID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.HardDriveSizeID) 
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("HardDriveSizeID", ViewData["HardDriveSizeID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.HardDriveSizeID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.Serial)
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Serial)
                    @Html.ValidationMessageFor(model => model.Serial, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.Location) 
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Location)
                    @Html.ValidationMessageFor(model => model.Location, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.Comments) 
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Comments, 8, 40, new { HtmlAttributes = new { } })
                    @Html.ValidationMessageFor(model => model.Comments, null, new { @class = "text-danger" })
                </div>

            </div>
        </div>
    </div>

    <div class="row">

        <div class="form-group">
            <div class="editor-label"></div>
            <div class="col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
        <br />&nbsp;
        <br />&nbsp;
        <div class="form-group">
            <div class="editor-label"></div>
            <div class="col-md-10">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
        <br />&nbsp;
    </div>

}