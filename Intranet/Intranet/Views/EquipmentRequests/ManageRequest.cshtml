@model Intranet.Models.EquipmentRequests

@{
    ViewBag.Title = "Manage Equipment Request";
}

<h2>Manage Equipment Request</h2>
<br />

@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    <div class="row">
        @Html.HiddenFor(model => model.EquipmentRequestID)
        @Html.HiddenFor(model => model.emp_id)
        @Html.HiddenFor(model => model.EquipmentRequestStatusID)
        @Html.HiddenFor(model => model.RequestSubmittedDate)
        @Html.HiddenFor(model => model.RequestDecisionDate)
        @Html.HiddenFor(model => model.ExtensionDate)

        <div class="col-md-4">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.EquipmentRequestID)
                </div>
                <div class="col-md-10">
                    @Html.DisplayFor(model => model.EquipmentRequestID)
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequestStartDate) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.RequestStartDate, new { id = "datetimepicker_start" })
                    @Html.ValidationMessageFor(model => model.RequestStartDate, null, new { @class = "text-danger" })
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequestEndDate) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.RequestEndDate, new { id = "datetimepicker_end" })
                    @Html.ValidationMessageFor(model => model.RequestEndDate, null, new { @class = "text-danger" })
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.project_id) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("project_id", ViewData["division"] as List<SelectListItem>, "Please select...")
                </div>
            </div>
            <br />&nbsp;
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.EquipmentRequestStatusID)
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("EquipmentRequestStatusID", ViewData["EquipmentRequestStatusID"] as List<SelectListItem>, "Please select...", new { @disabled = "disabled" })
                    @Html.ValidationMessageFor(model => model.EquipmentRequestStatusID, null, new { @class = "text-danger" })
                </div>
            </div>
            <br />&nbsp;
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.RequestDecisionDate)
                </div>
                <div class="col-md-10">
                    @if (Model.RequestDecisionDate != null)
                    {
                        @Html.DisplayFor(model => model.RequestDecisionDate)
                    }
                    else
                    {
                        @System.Web.Configuration.WebConfigurationManager.AppSettings["NoDataText"]
                    }
                </div>
            </div>
            <br />&nbsp;
            
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.ExtensionDate)
                </div>
                <div class="col-md-10">
                    @if (Model.ExtensionDate != null)
                    {
                        if (Model.ExtensionDate.Value.ToShortDateString() == "1/1/2001")
                        {
                            @System.Web.Configuration.WebConfigurationManager.AppSettings["NoDataText"]
                        }
                        else
                        {
                            @Html.DisplayFor(model => model.ExtensionDate)
                        }
                    }
                    else
                    {
                        @System.Web.Configuration.WebConfigurationManager.AppSettings["NoDataText"]
                    }
                </div>
            </div>
            <br />&nbsp;
            @if ((Model.EquipmentRequestStatusID == 5) || (Model.EquipmentRequestStatusID == 6))
                {
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.DateReturned)
                    </div>
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DateReturned, new { id = "datetimepicker_third" })
                        @Html.ValidationMessageFor(model => model.DateReturned, null, new { @class = "text-danger" })
                    </div>
                </div>
             }
            
        </div>
        <br />&nbsp;

    </div>

    <div class="row">

        <div class="form-group">
            <div class="editor-label"></div>
            <div class="col-md-10">
                @if ((Model.EquipmentRequestStatusID == 1) || (Model.EquipmentRequestStatusID == 2) ||
                    (Model.EquipmentRequestStatusID == 4) || (Model.EquipmentRequestStatusID == 5))
                {
                    <input type="submit" value="Update" name="Buttons" class="btn btn-primary" />
                }
                @if (Model.EquipmentRequestStatusID == 1)
                {
                    <input type="submit" value="Approve" name="Buttons" class="btn btn-primary" />
                    <input type="submit" value="Reject" name="Buttons" class="btn btn-primary" />
                }
                @if (Model.EquipmentRequestStatusID == 5)
                {
                    <input type="submit" value="Mark Returned" name="Buttons" class="btn btn-primary" />
                }

                @if (Model.EquipmentRequestStatusID == 5 & (Model.ExtensionDate != null))
                {
                    if (Model.ExtensionDate.Value.ToShortDateString() == "1/1/2001")
                    {  }
                    else
                    {
                        <input type="submit" value="Approve Extension" name="Buttons" class="btn btn-primary" />
                        <input type="submit" value="Reject Extension" name="Buttons" class="btn btn-primary" />
                    }

                }
            </div>
        </div>
        <br />&nbsp;
        <br />&nbsp;
        <div class="form-group">
            <div class="editor-label"></div>
            <div class="col-md-10">
                @Html.ActionLink("Back to List", "ManageIndex")
            </div>
        </div>
        <br />&nbsp;
    </div>

    <div class="row">
        <hr />
        @Html.Partial("~/Views/EquipmentRequests/_EquipmentRequested.cshtml", ViewData["EquipmentRequests"])
    </div>

}

@*@section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@

<script type="text/javascript">
    $(function () {
        $('#datetimepicker_start').datetimepicker({
            daysOfWeekDisabled: [0, 6],
            showClear: true,
            showTodayButton: true,
            stepping: 15,
            useCurrent: false
        });
        $('#datetimepicker_end').datetimepicker({
            daysOfWeekDisabled: [0, 6],
            showClear: true,
            showTodayButton: true,
            stepping: 15,
            useCurrent: false
        });
        $('#datetimepicker_third').datetimepicker({
            daysOfWeekDisabled: [0, 6],
            showClear: true,
            showTodayButton: true,
            stepping: 15,
            useCurrent: false
        });
        $("#datetimepicker_start").on("dp.change", function (e) {
            $('#datetimepicker_end').data("DateTimePicker").minDate(e.date);
        });
        $("#datetimepicker_end").on("dp.change", function (e) {
            $('#datetimepicker_start').data("DateTimePicker").maxDate(e.date);
        });
    });
</script>
