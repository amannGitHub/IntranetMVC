@model Intranet.Models.MeetingTracker

@{
    ViewBag.Title = "Meeting Tracker";
}

<h2>Meeting Tracker</h2>
<br />
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    @Html.AntiForgeryToken()

    @Html.HiddenFor(model => model.emp_id)

    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">Location Note:</h4>
        </div>
        <div class="panel-body">
            <p>This will do 1 of 2 things, depending on whether this is a for a new site, or if you are editing an existing site.</p>
            <p><strong>For new sites:</strong><br />The list will ask you to select a Meeting Facility.</p>
            <p><strong>For existing sites:</strong><br />The default selected item is what is currently being indicated on the LIVE site and in the MMAD database. In both cases, you will update the LIVE website and the MMAD database by changing the selected information for this item.</p>
        </div>
    </div>
    <div class="row">
        <div class="col-md-4">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.project_id) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("project_id", ViewData["project_id"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.project_id, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.MeetingPlannerID) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("MeetingPlannerID", ViewData["MeetingPlannerID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.MeetingPlannerID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.MeetingTitle) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MeetingTitle, new { htmlAttributes = new { @class = "title" } })
                    @Html.ValidationMessageFor(model => model.MeetingTitle, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.ShortName) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ShortName)
                    @Html.ValidationMessageFor(model => model.ShortName, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.ClientID) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("ClientID", ViewData["ClientID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.ClientID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.MeetingStartDate) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.MeetingStartDate, new { id = "datetimepicker_start" })
                    @Html.ValidationMessageFor(model => model.MeetingStartDate, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.MeetingEndDate) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.MeetingEndDate, new { id = "datetimepicker_end" })
                    @Html.ValidationMessageFor(model => model.MeetingEndDate, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                
                <div class="editor-label">
                    @Html.LabelFor(model => model.RegistrationEndDate) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.RegistrationEndDate, new { id = "datetimepicker_enddate" })
                    @Html.ValidationMessageFor(model => model.RegistrationEndDate, null, new { @class = "text-danger" })
                </div>
               
                <br />&nbsp;
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.MaxRegistrants) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.MaxRegistrants, new { id = "MaxRegistrants" })
                    @Html.ValidationMessageFor(model => model.MaxRegistrants, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.RegistrationFee) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.RegistrationFee, new { id = "RegistrationFee" })
                    @Html.ValidationMessageFor(model => model.RegistrationFee, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                
                <div class="editor-label">
                    @Html.LabelFor(model => model.LocationID) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.DropDownList("LocationID", ViewData["LocationID"] as List<SelectListItem>, "Please select...")
                    @Html.ValidationMessageFor(model => model.LocationID, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.FinalAttendeeCount) 
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FinalAttendeeCount, new { id = "FinalAttendeeCount" })
                    @Html.ValidationMessageFor(model => model.FinalAttendeeCount, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.MeetingPurpose) <span class="field-required">*</span>
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.MeetingPurpose, 8, 40, new { HtmlAttributes = new { } })
                    @Html.ValidationMessageFor(model => model.MeetingPurpose, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
            </div>
        </div>
        <div class="col-md-4">
            <div class="form-group">
                
                <div class="editor-label">
                    @Html.LabelFor(model => model.ProblemsAndSolutions)
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.ProblemsAndSolutions, 8, 40, new { HtmlAttributes = new { } })
                    @Html.ValidationMessageFor(model => model.ProblemsAndSolutions, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;
                <br />&nbsp;
                <br />&nbsp;
                <br />&nbsp;
                <br />&nbsp;
                <br />&nbsp;
                <br />&nbsp;
                <br />&nbsp;
                <div class="editor-label">
                    @Html.LabelFor(model => model.Notes)
                </div>
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Notes, 8, 40, new { HtmlAttributes = new { } })
                    @Html.ValidationMessageFor(model => model.Notes, null, new { @class = "text-danger" })
                </div>
                <br />&nbsp;

            </div>
        </div>
    </div>
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">Menu Items for Regitration Site</h4>
        </div>
        <div class="panel-body">
            <div class="col-md-6">
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Home)
                    </div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.Home)
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Registration)
                    </div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.Registration)
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Logistics)
                    </div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.Logistics)
                    </div>
                </div>
                <br />&nbsp;

            </div>
            <div class="col-md-6">

                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Agenda)
                    </div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.Agenda)
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Abstracts)
                    </div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.Abstracts)
                    </div>
                </div>
                <br />&nbsp;
                <div class="form-group">
                    <div class="editor-label">
                        @Html.LabelFor(model => model.Other)
                    </div>
                    <div class="col-md-10">
                        @Html.CheckBoxFor(model => model.Other)
                        &ensp;@Html.TextBoxFor(model => model.OtherText, new { @Disabled = "disabled" })
                    </div>
                </div>
                <br />&nbsp;
            </div>
        </div>
    </div>
    <div class="panel panel-primary">
        <div class="panel-heading">
            <h4 class="panel-title">Registration Fields</h4>
        </div>
        <div class="panel-body">
            <div class="col-md-12">
                <h4>Instructions</h4>
                A field should be "Selected" if you want that field to appear on the registration form.<br />
                A field should be "Required" if ALL registrants must enter valid information for that field.<br /><hr />
            </div>
            <div class="col-md-6">

                <table width="300px;">
                    <tr>
                        <td colspan="3"><h4>Identifiers</h4></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td align="center">@Html.Label("Selected")</td>
                        <td align="center">@Html.Label("Required")</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Honorific)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Honorific)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.HonorificReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.FirstName)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.FirstName)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.FirstNameReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.LastName)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.LastName)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.LastNameReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Degree)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Degree)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.DegreeReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Title)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Title)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.TitleReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Department)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Department)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.DepartmentReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Organization)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Organization)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.OrganizationReq)</td>
                    </tr>
                    <tr>
                        <td colspan="3"><hr /></td>
                    </tr>
                    <tr>
                        <td colspan="3"><h4>Address</h4></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td align="center">@Html.Label("Selected")</td>
                        <td align="center">@Html.Label("Required")</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Address1)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Address1)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Address1Req)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Address2)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Address2)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Address2Req)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.City)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.City)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.CityReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.State)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.State)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.StateReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Country)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Country)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.CountryReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Zipcode)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Zipcode)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.ZipcodeReq)</td>
                    </tr>
                </table>

                <br />&nbsp;
            </div>
            <div class="col-md-6">

                <table width="300px;">
                    <tr>
                        <td colspan="3"><h4>Contact</h4></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td align="center">@Html.Label("Selected")</td>
                        <td align="center">@Html.Label("Required")</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Phone)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Phone)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.PhoneReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Email)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Email)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.EmailReq)</td>
                    </tr>
                    
                    <tr>
                        <td colspan="3"><hr /></td>
                    </tr>
                    <tr>
                        <td colspan="3"><h4>Other</h4></td>
                    </tr>
                    <tr>
                        <td></td>
                        <td align="center">@Html.Label("Selected")</td>
                        <td align="center">@Html.Label("Required")</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Bios)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Bios)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.BiosReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Abstracts1)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Abstracts1)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Abstracts1Req)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.Posters)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.Posters)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.PostersReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.DietaryRestrictions)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.DietaryRestrictions)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.DietaryRestrictionsReq)</td>
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.SpecialNeeds)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.SpecialNeeds)</td>
                        @*<td align="center">@Html.CheckBoxFor(model => model.SpecialNeedsReq)</td>*@
                    </tr>
                    <tr>
                        <td>@Html.LabelFor(model => model.PaymentMethods) *</td>
                        <td align="center">@Html.CheckBoxFor(model => model.PaymentMethods)</td>
                        <td align="center">@Html.CheckBoxFor(model => model.PaymentMethodsReq)</td>
                    </tr>
                    <tr>
                        <td colspan="3"><br /><br />* Payment Method is only for sites with registration fees</td>
                    </tr>
                </table>
                <br />&nbsp;
            </div>
        </div>
    </div>
    <div class="row">

        <div class="form-group">
            <div class="editor-label"></div>
            <div class="col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
        <br />&nbsp;
        <br />&nbsp;
        <div class="form-group">
            <div class="editor-label"></div>
            <div class="col-md-10">
                @Html.ActionLink("Back to List", "Index")
            </div>
        </div>
        <br />&nbsp;
    </div>

}

<script type="text/javascript">
            $(function () {
                $('#datetimepicker_start').datetimepicker({
                    daysOfWeekDisabled: [0, 6],
                    showClear: true,
                    showTodayButton: true,
                    stepping: 15,
                    useCurrent: false
                });
                $('#datetimepicker_end').datetimepicker({
                    daysOfWeekDisabled: [0, 6],
                    showClear: true,
                    showTodayButton: true,
                    stepping: 15,
                    useCurrent: false
                });
                $('#datetimepicker_enddate').datetimepicker({
                    daysOfWeekDisabled: [0, 6],
                    showClear: true,
                    showTodayButton: true,
                    stepping: 15,
                    useCurrent: false
                });
                $("#datetimepicker_start").on("dp.change", function (e) {
                    $('#datetimepicker_end').data("DateTimePicker").minDate(e.date);
                });
                $("#datetimepicker_end").on("dp.change", function (e) {
                    $('#datetimepicker_start').data("DateTimePicker").maxDate(e.date);
                });

                //Clear datepickers
                $("#datetimepicker_start").val('');
                $("#datetimepicker_end").val('');
                $("#datetimepicker_enddate").val('');
                
                $("#MaxRegistrants").val('');
                $("#RegistrationFee").val('');
                $("#FinalAttendeeCount").val('');

                $("#Other").on("change", function () {
                    //if the checkbox is checked, enable the text box; otherwise, disable the box
                    if (this.checked) {
                        $("#OtherText").prop("disabled", "")
                    } else {
                        $("#OtherText").prop("disabled", "disabled")
                    }
                });

                //Code for selecting Required and auto-selecting Selected in Registration Fields
                //Honorific
                //if Required check box is selected, auto-select Selected checkbox
                $("#HonorificReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Honorific").prop("checked", true);
                    }
                });
                //if Selected check box is deselected and Required is still selected, auto-deselect the Required box
                $("#Honorific").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#HonorificReq").prop("checked", false);
                    }
                });

                //FirstName
                $("#FirstNameReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#FirstName").prop("checked", true);
                    }
                });
                $("#FirstName").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#FirstNameReq").prop("checked", false);
                    }
                });
                //LastName
                $("#LastNameReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#LastName").prop("checked", true);
                    }
                });
                $("#LastName").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#LastNameReq").prop("checked", false);
                    }
                });
                //Degree
                $("#DegreeReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Degree").prop("checked", true);
                    }
                });
                $("#Degree").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#DegreeReq").prop("checked", false);
                    }
                });
                //Title
                $("#TitleReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Title").prop("checked", true);
                    }
                });
                $("#Title").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#TitleReq").prop("checked", false);
                    }
                });
                //Department
                $("#DepartmentReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Department").prop("checked", true);
                    }
                });
                $("#Department").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#DepartmentReq").prop("checked", false);
                    }
                });
                //Organization
                $("#OrganizationReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Organization").prop("checked", true);
                    }
                });
                $("#Organization").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#OrganizationReq").prop("checked", false);
                    }
                });
                //Address1
                $("#Address1Req").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Address1").prop("checked", true);
                    }
                });
                $("#Address1").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#Address1Req").prop("checked", false);
                    }
                });
                //Address2
                $("#Address2Req").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Address2").prop("checked", true);
                    }
                });
                $("#Address2").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#Address2Req").prop("checked", false);
                    }
                });
                //City
                $("#CityReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#City").prop("checked", true);
                    }
                });
                $("#City").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#CityReq").prop("checked", false);
                    }
                });
                //State
                $("#StateReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#State").prop("checked", true);
                    }
                });
                $("#State").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#StateReq").prop("checked", false);
                    }
                });
                //Country
                $("#CountryReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Country").prop("checked", true);
                    }
                });
                $("#Country").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#CountryReq").prop("checked", false);
                    }
                });
                //Zipcode
                $("#ZipcodeReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Zipcode").prop("checked", true);
                    }
                });
                $("#Zipcode").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#ZipcodeReq").prop("checked", false);
                    }
                });
                //Phone
                $("#PhoneReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Phone").prop("checked", true);
                    }
                });
                $("#Phone").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#PhoneReq").prop("checked", false);
                    }
                });
                //Email
                $("#EmailReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Email").prop("checked", true);
                    }
                });
                $("#Email").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#EmailReq").prop("checked", false);
                    }
                });
                //Bios
                $("#BiosReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Bios").prop("checked", true);
                    }
                });
                $("#Bios").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#BiosReq").prop("checked", false);
                    }
                });
                //Abstracts1
                $("#Abstracts1Req").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Abstracts1").prop("checked", true);
                    }
                });
                $("#Abstracts1").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#Abstracts1Req").prop("checked", false);
                    }
                });
                //Posters
                $("#PostersReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#Posters").prop("checked", true);
                    }
                });
                $("#Posters").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#PostersReq").prop("checked", false);
                    }
                });
                //DietaryRestrictions
                $("#DietaryRestrictionsReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#DietaryRestrictions").prop("checked", true);
                    }
                });
                $("#DietaryRestrictions").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#DietaryRestrictionsReq").prop("checked", false);
                    }
                });
                //PaymentMethods
                $("#PaymentMethodsReq").on("change", function () {
                    //check if the change was a selection
                    if (this.checked) {
                        $("#PaymentMethods").prop("checked", true);
                    }
                });
                $("#PaymentMethods").on("change", function () {
                    //check if the change was a deselect
                    if (!this.checked) {
                        $("#PaymentMethodsReq").prop("checked", false);
                    }
                });
            });
</script>
@Styles.Render("~/Content/Site.css")